package com.example.monster.airgesture;


import android.content.Context;
import android.content.Intent;
import android.media.AudioFormat;
import android.media.AudioManager;
import android.media.AudioRecord;
import android.media.AudioTrack;
import android.media.MediaRecorder;
import android.os.AsyncTask;
import android.os.Build;
import android.os.Environment;
import android.os.Message;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Timer;
import java.util.TimerTask;
import android.os.Handler;
import edu.emory.mathcs.jtransforms.fft.DoubleFFT_1D;
import android.os.Process;

public class MainActivity extends ActionBarActivity implements Thread.UncaughtExceptionHandler {
     //////////////////UI///////////////////////////////
    public static TextView tv;
    private String sRecordStatus = "Init Record";
    public static TextView tvTime100MilliSecond;
    private static String INIT_100_MILL_SECOND = "00:00:0";
    private String s100MillSecond = INIT_100_MILL_SECOND;

    //////////////////////////////////////////////////////

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        tv=(TextView)findViewById(R.id.textView2);
        //在此调用下面方法，才能捕获到线程中的异常
        Thread.setDefaultUncaughtExceptionHandler(this);
        //time init
        tvTime100MilliSecond=(TextView)findViewById(R.id.time_100millisecond);
        tvTime100MilliSecond.setText(s100MillSecond);
        tv.setText(sRecordStatus);
        GlobalConfig.fAbsolutepath.mkdirs();//创建文件夹
        GlobalConfig.fTemplatePath.mkdirs();//创建文件夹
        GlobalConfig.fResultPath.mkdirs();//创建文件夹
        startRecordAction();

        //initIos();
        if(GlobalConfig.bPlayThreadFlag) {
            ThreadInstantPlay threadInstantPlay = new ThreadInstantPlay();
            //Process.setThreadPriority(Process.THREAD_PRIORITY_URGENT_AUDIO);
            threadInstantPlay.start();
        }
        else{
            GlobalConfig.isRecording=true;
        }

        GlobalConfig.stPhaseProxy.init();
    }

    //必须实现接口uncaughtException
    @Override
    public void uncaughtException(Thread arg0, Throwable arg1) {
        //在此处理异常， arg1即为捕获到的异常
        Log.i("AAA", "uncaughtException   " + arg1);
    }

    class ThreadInstantPlay extends Thread
    {
        @Override
        public void run()
        {
            //Process.setThreadPriority(Process.THREAD_PRIORITY_AUDIO);
            AudioTrackPlay Player= new AudioTrackPlay();
            GlobalConfig.isRecording=true;
            Player.play();

            while (GlobalConfig.isRecording==true){}
            Player.stop();
        }
    }


    public void startRecordAction(){
        try {
            //创建临时文件,注意这里的格式为.pcm
            GlobalConfig.fPcmRecordFile = File.createTempFile(GlobalConfig.sRecordPcmFileName, ".pcm", GlobalConfig.fAbsolutepath);
            GlobalConfig.fPcmRecordFile2 = File.createTempFile(GlobalConfig.sRecordPcmFileName2, ".pcm", GlobalConfig.fAbsolutepath);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        GlobalConfig.stPhaseAudioRecord.initRecord();
        sRecordStatus="-------------start Record-----------------";
        tv.setText(sRecordStatus);
    }

    //runs after pressing the record button
    public void startRecording(View view) throws IOException {
        startRecordAction();
        //UI
        view.setClickable(false);
        Button btn=(Button)findViewById(R.id.button);
        btn.setClickable(true);
        //judgeEddian();
    }


    public void stopRecordingAction() throws IOException {
        Log.i("timer","audio Stopped");
        sRecordStatus="!!!!!!!!!!!!!stop Record!!!!!!!!!!!!";
        tv.setText(sRecordStatus);
        //play stop
        //record release
        GlobalConfig.isRecording = false;
        GlobalConfig.stPhaseAudioRecord.stopRecording();
        GlobalConfig.stPhaseProxy.destroy();
        GlobalConfig.stWaveFileUtil.destroy();
    }

    //runs when the stop button is pressed
    public void stopRecording(View view) throws IOException {
        Log.i("audio","Stopped");
        stopRecordingAction();
        //UI
        view.setClickable(false);
        Button btn=(Button)findViewById(R.id.button2);
        btn.setClickable(true);
    }

    //any code below this comment can be neglected
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
